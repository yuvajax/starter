{"version":3,"sources":["component/Todo.js","component/Todolist.js","component/Todoform.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","text","todos","todo","setTodo","className","completed","onClick","map","item","id","filter","Todolist","console","log","Todoform","useState","input","setInput","onSubmit","e","preventDefault","compeleted","Math","random","type","value","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTA+BeA,MA3Bf,YAA6C,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,QAgB9B,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,oBAAIA,UAAS,oBAAeH,EAAMI,UAAY,YAAc,KAA5D,SAAoEL,IACpE,wBAAQM,QAdG,WACnBH,EAAQD,EAAKK,KAAI,SAAAC,GACb,OAAGA,EAAKC,IAAMR,EAAMQ,GAChB,2BACOD,GADP,IACaH,WAAWG,EAAKH,YAG1BG,OAOH,SAAiC,mBAAGJ,UAAU,mBAC9C,wBAAQE,QAnBC,WACjBH,EAAQD,EAAKQ,QAAO,SAAAF,GAAI,OAAIA,EAAKC,KAAOR,EAAMQ,QAkBtC,SAA+B,mBAAGL,UAAU,yB,MCN7CO,MAff,YAAoC,IAAjBT,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,QAErB,OADAS,QAAQC,IAAIX,GAER,qBAAKE,UAAU,YAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,6BACMF,EAAKK,KAAI,SAAAN,GAAK,OACZ,cAAC,EAAD,CAAqBD,KAAMC,EAAMD,KACjCE,KAAMA,EAAMC,QAASA,EAASF,MAAOA,GAD1BA,EAAMQ,c,MCyB1BK,MAhCf,WACI,MAA2BC,mBAAS,KAApC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAyBF,mBAAS,IAAlC,mBAAOb,EAAP,KAAcC,EAAd,KAeA,OACI,sBAAKC,UAAU,WAAf,UACI,4CACA,sBAAKA,UAAU,gBAAf,UACI,uBAAMc,SAZK,SAACC,GACpBA,EAAEC,iBACFjB,EAAQ,GAAD,mBACAD,GADA,CACK,CAACF,KAAKgB,EAAMK,YAAW,EAAMZ,GAAiB,IAAda,KAAKC,aAEjDN,EAAS,KAO+Bb,UAAU,cAA1C,UACI,uBAAOoB,KAAK,OAAOC,MAAOT,EAAOU,SAlB1B,SAACP,GACpBF,EAASE,EAAEQ,OAAOF,OAClBb,QAAQC,IAAIG,MAiBA,iCAAQ,mBAAGZ,UAAU,qBAEzB,cAAC,EAAD,CAAUF,KAAMA,EAAMC,QAASA,WCdhCyB,MAXf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,CAAUA,UAAU,mBCIbyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5937733b.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../component/Todo.css';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nfunction Todo({text ,todos ,todo, setTodo}) {\r\n\r\n    const handledelete = () =>{\r\n        setTodo(todo.filter(item => item.id !== todos.id));\r\n    }\r\n\r\n    const handlecomplete = () =>{\r\n        setTodo(todo.map(item => {\r\n            if(item.id == todos.id) {\r\n                return{\r\n                    ...item, completed:!item.completed,\r\n                };\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    return (\r\n        <div className='todo-component'>\r\n            <div className='todo-inner'>\r\n                <li className={`todo-item ${todos.completed ? \"completed\" : \" \"}`}>{text}</li>\r\n                <button onClick={handlecomplete}><i className=\"fas fa-check\"/></button>\r\n                <button onClick={handledelete}><i className=\"fas fa-trash\"/></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\nimport '../component/Todolist.css';\r\n\r\nfunction Todolist({todo ,setTodo}) {\r\n    console.log(todo)\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <div className=\"todo-container\">\r\n                <ul>\r\n                     {todo.map(todos => (\r\n                        <Todo key={todos.id} text={todos.text} \r\n                        todo={todo} setTodo={setTodo} todos={todos} />\r\n                        ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Todolist\r\n","import React,{useState} from 'react'\r\nimport Todolist from './Todolist'\r\nimport '../component/Todoform.css';\r\n\r\nfunction Todoform() {\r\n    const [input , setInput] = useState(\" \")\r\n    const [todo , setTodo] = useState([ ])\r\n\r\n    const handleonchange = (e) =>{\r\n        setInput(e.target.value)\r\n        console.log(input)\r\n    }\r\n\r\n    const handleonsubmit = (e) =>{\r\n        e.preventDefault();\r\n        setTodo([\r\n            ...todo,{text:input,compeleted:false,id:Math.random()*1000}\r\n        ]);\r\n        setInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className='form-div'>\r\n            <h1>ToDo List!</h1>\r\n            <div className='form-innerdiv'>\r\n                <form onSubmit={handleonsubmit} className='form-submit'>\r\n                    <input type='text' value={input} onChange={handleonchange}/>\r\n                    <button><i className=\"fas fa-plus\"/></button>\r\n                </form>\r\n                <Todolist todo={todo} setTodo={setTodo}/>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Todoform\r\n","import './App.css';\nimport Todoform from './component/Todoform';\nimport Todolist from './component/Todolist';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Todoform className='todofoorm'/>\n        {/* <Todolist/> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}